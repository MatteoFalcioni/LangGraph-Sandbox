{
  "timestamp": "2025-09-15T13:38:40.743136",
  "variables": {
    "Path": {
      "type": "type",
      "value": "<class 'pathlib.Path'>"
    },
    "pd": {
      "type": "module",
      "value": "<module 'pandas' from '/usr/local/lib/python3.11/site-packages/pandas/__init__.py'>"
    },
    "gc": {
      "type": "module",
      "value": "<module 'gc' (built-in)>"
    },
    "matplotlib": {
      "type": "module",
      "value": "<module 'matplotlib' from '/usr/local/lib/python3.11/site-packages/matplotlib/__init__.py'>"
    },
    "session_artifacts": {
      "type": "PosixPath",
      "value": "/session/artifacts"
    },
    "current_vars": {
      "type": "dict",
      "value": "{'Path': {'type': 'type', 'value': \"<class 'pathlib.Path'>\"}, 'pd': {'type': 'module', 'value': \"<module 'pandas' from '/usr/local/lib/python3.11/site-packages/pandas/__init__.py'>\"}, 'gc': {'type': 'module', 'value': \"<module 'gc' (built-in)>\"}, 'matplotlib': {'type': 'module', 'value': \"<module 'matplotlib' from '/usr/local/lib/python3.11/site-packages/matplotlib/__init__.py'>\"}, 'session_artifacts': {'type': 'PosixPath', 'value': '/session/artifacts'}}"
    },
    "name": {
      "type": "str",
      "value": "current_vars"
    },
    "value": {
      "type": "str",
      "value": "current_vars"
    },
    "df": {
      "type": "DataFrame",
      "value": "            date   avg   min stagione\n0     2001-01-01   2.7  -0.2  Inverno\n1     2001-01-02   3.8   1.5  Inverno\n2     2001-01-03   3.6   1.2  Inverno\n3     2001-01-06   3.5   2.4  Inverno\n4     2001-01-08   7.1   3.9  Inverno\n...          ...   ...   ...      ...\n8963  2025-06-23  28.6  21.4   Estate\n8964  2025-06-24  28.7  22.0   Estate\n8965  2025-06-29  29.2  23.0   Estate\n8966  2025-07-07  25.6  18.7   Estate\n8967  2025-07-19  27.4  21.4   Estate\n\n[8968 rows x 4 columns]"
    },
    "imported_modules": {
      "type": "list",
      "value": "['sys', 'builtins', 'marshal', 'posix', 'time', 'zipimport', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'abc', 'io', 'stat', 'genericpath', 'posixpath', 'os.path', 'os', 'site', 'types', 'operator', 'itertools', 'keyword', 'reprlib', 'collections', 'functools', 'enum', 're._constants', 're._parser', 're._casefix', 're._compiler', 'copyreg', 're', 'collections.abc', 'concurrent', 'token', 'tokenize', 'linecache', 'textwrap', 'contextlib', 'traceback', 'warnings', 'weakref', 'string', 'threading', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', 'errno', 'heapq', 'math', 'select', 'selectors', 'array', 'socket', 'locale', 'signal', 'fcntl', 'subprocess', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'ast', 'opcode', 'dis', 'importlib._bootstrap', 'importlib._bootstrap_external', 'importlib', 'importlib.machinery', 'inspect', 'asyncio.coroutines', 'contextvars', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.exceptions', "
    },
    "state": {
      "type": "dict",
      "value": "{'timestamp': '2025-09-15T13:38:04.204765', 'variables': {'Path': {'type': 'type', 'value': \"<class 'pathlib.Path'>\"}, 'pd': {'type': 'module', 'value': \"<module 'pandas' from '/usr/local/lib/python3.11/site-packages/pandas/__init__.py'>\"}, 'gc': {'type': 'module', 'value': \"<module 'gc' (built-in)>\"}, 'matplotlib': {'type': 'module', 'value': \"<module 'matplotlib' from '/usr/local/lib/python3.11/site-packages/matplotlib/__init__.py'>\"}, 'session_artifacts': {'type': 'PosixPath', 'value': '/session/artifacts'}, 'current_vars': {'type': 'dict', 'value': '{\\'Path\\': {\\'type\\': \\'type\\', \\'value\\': \"<class \\'pathlib.Path\\'>\"}, \\'pd\\': {\\'type\\': \\'module\\', \\'value\\': \"<module \\'pandas\\' from \\'/usr/local/lib/python3.11/site-packages/pandas/__init__.py\\'>\"}, \\'gc\\': {\\'type\\': \\'module\\', \\'value\\': \"<module \\'gc\\' (built-in)>\"}, \\'matplotlib\\': {\\'type\\': \\'module\\', \\'value\\': \"<module \\'matplotlib\\' from \\'/usr/local/lib/python3.11/site-packages/matplotlib/__init__.py\\'>\"}, \\'session_a"
    },
    "f": {
      "type": "TextIOWrapper",
      "value": "<_io.TextIOWrapper name='/session/python_state.json' mode='w' encoding='UTF-8'>"
    },
    "plt": {
      "type": "module",
      "value": "<module 'matplotlib.pyplot' from '/usr/local/lib/python3.11/site-packages/matplotlib/pyplot.py'>"
    },
    "fig": {
      "type": "Figure",
      "value": "Figure(1200x600)"
    },
    "ax": {
      "type": "Axes",
      "value": "Axes(0.0538773,0.0971296;0.933623x0.840648)"
    },
    "df_plot": {
      "type": "DataFrame",
      "value": "           date  avg  max  min stagione\n0    2001-01-01  2.7  6.5 -0.2  Inverno\n1    2001-01-02  3.8  7.0  1.5  Inverno\n2    2001-01-03  3.6  7.2  1.2  Inverno\n2979 2001-01-04  1.8  4.2  0.6  Inverno\n2980 2001-01-05  3.7  6.3  1.4  Inverno\n...         ...  ...  ...  ...      ...\n6139 2001-12-27  0.9  6.2 -0.4  Inverno\n6140 2001-12-28  0.5  9.4 -0.4  Inverno\n116  2001-12-29 -0.9  5.1 -2.4  Inverno\n6141 2001-12-30  2.6  8.8 -0.8  Inverno\n117  2001-12-31  1.3  4.6 -2.1  Inverno\n\n[365 rows x 5 columns]"
    },
    "dir_path": {
      "type": "PosixPath",
      "value": "/session/artifacts"
    },
    "plot_path": {
      "type": "PosixPath",
      "value": "/session/artifacts/temperatures_first_year.png"
    },
    "fig_num": {
      "type": "int",
      "value": "1"
    },
    "dataset_path": {
      "type": "str",
      "value": "/data/temperatures.parquet"
    },
    "output_dir": {
      "type": "PosixPath",
      "value": "/session/data"
    },
    "output_path": {
      "type": "PosixPath",
      "value": "/session/data/temperatures_no_max.parquet"
    }
  },
  "imported_modules": [
    "sys",
    "builtins",
    "marshal",
    "posix",
    "time",
    "zipimport",
    "codecs",
    "encodings.aliases",
    "encodings",
    "encodings.utf_8",
    "abc",
    "io",
    "stat",
    "genericpath",
    "posixpath",
    "os.path",
    "os",
    "site",
    "types",
    "operator",
    "itertools",
    "keyword",
    "reprlib",
    "collections",
    "functools",
    "enum",
    "re._constants",
    "re._parser",
    "re._casefix",
    "re._compiler",
    "copyreg",
    "re",
    "collections.abc",
    "concurrent",
    "token",
    "tokenize",
    "linecache",
    "textwrap",
    "contextlib",
    "traceback",
    "warnings",
    "weakref",
    "string",
    "threading",
    "atexit",
    "logging",
    "concurrent.futures._base",
    "concurrent.futures",
    "errno",
    "heapq",
    "math",
    "select",
    "selectors",
    "array",
    "socket",
    "locale",
    "signal",
    "fcntl",
    "subprocess",
    "struct",
    "binascii",
    "base64",
    "ssl",
    "asyncio.constants",
    "ast",
    "opcode",
    "dis",
    "importlib._bootstrap",
    "importlib._bootstrap_external",
    "importlib",
    "importlib.machinery",
    "inspect",
    "asyncio.coroutines",
    "contextvars",
    "asyncio.format_helpers",
    "asyncio.base_futures",
    "asyncio.exceptions",
    "asyncio.base_tasks",
    "asyncio.events",
    "asyncio.futures",
    "asyncio.protocols",
    "asyncio.transports",
    "asyncio.log",
    "asyncio.sslproto",
    "typing.io",
    "typing.re",
    "typing",
    "asyncio.mixins",
    "asyncio.tasks",
    "asyncio.locks",
    "asyncio.staggered",
    "asyncio.trsock",
    "asyncio.base_events",
    "asyncio.runners",
    "asyncio.queues",
    "asyncio.streams",
    "asyncio.subprocess",
    "asyncio.taskgroups",
    "asyncio.timeouts",
    "asyncio.threads",
    "asyncio.base_subprocess",
    "asyncio.selector_events",
    "asyncio.unix_events",
    "asyncio",
    "json.scanner",
    "json.decoder",
    "json.encoder",
    "json",
    "pickle",
    "queue",
    "copy",
    "logging.handlers",
    "socketserver",
    "logging.config",
    "configparser",
    "fnmatch",
    "ntpath",
    "urllib",
    "ipaddress",
    "urllib.parse",
    "pathlib",
    "gettext",
    "datetime",
    "click._compat",
    "click.globals",
    "click.utils",
    "click.exceptions",
    "click.types",
    "click.parser",
    "click.formatting",
    "click.termui",
    "click.core",
    "click.decorators",
    "click",
    "uvicorn._types",
    "uvicorn.importer",
    "http",
    "uvicorn.logging",
    "uvicorn.middleware",
    "uvicorn.middleware.asgi2",
    "uvicorn.middleware.message_logger",
    "uvicorn.middleware.proxy_headers",
    "uvicorn.middleware.wsgi",
    "uvicorn.config",
    "platform",
    "email",
    "bisect",
    "random",
    "calendar",
    "email._parseaddr",
    "email.base64mime",
    "email.quoprimime",
    "email.errors",
    "quopri",
    "email.encoders",
    "email.charset",
    "email.utils",
    "uvicorn.server",
    "multiprocessing.process",
    "multiprocessing.reduction",
    "multiprocessing.context",
    "multiprocessing",
    "zlib",
    "bz2",
    "lzma",
    "shutil",
    "tempfile",
    "multiprocessing.util",
    "multiprocessing.connection",
    "uvicorn._subprocess",
    "uvicorn.supervisors.basereload",
    "uvicorn.supervisors.multiprocess",
    "uvicorn.supervisors.statreload",
    "uvicorn.supervisors",
    "uvicorn.main",
    "uvicorn",
    "uvicorn.loops",
    "uvicorn.loops.auto",
    "uvicorn.loops.asyncio",
    "uvicorn.protocols",
    "uvicorn.protocols.http",
    "dataclasses",
    "h11._abnf",
    "h11._util",
    "h11._headers",
    "h11._events",
    "h11._receivebuffer",
    "h11._state",
    "h11._readers",
    "h11._writers",
    "h11._connection",
    "h11._version",
    "h11",
    "uvicorn.protocols.http.flow_control",
    "uvicorn.protocols.utils",
    "uvicorn.protocols.http.h11_impl",
    "uvicorn.protocols.http.auto",
    "uvicorn.protocols.websockets",
    "uvicorn.protocols.websockets.auto",
    "uvicorn.lifespan",
    "uvicorn.lifespan.on",
    "starlette",
    "starlette.status",
    "email.header",
    "email._policybase",
    "email._encoded_words",
    "email.iterators",
    "email.message",
    "fastapi.openapi",
    "pydantic_core._pydantic_core",
    "numbers",
    "decimal",
    "typing_extensions",
    "pydantic_core.core_schema",
    "pydantic_core",
    "pydantic.version",
    "pydantic._migration",
    "typing_inspection",
    "typing_inspection.typing_objects",
    "typing_inspection.introspection",
    "pydantic._internal",
    "pydantic._internal._namespace_utils",
    "pydantic._internal._typing_extra",
    "pydantic._internal._repr",
    "pydantic.errors",
    "pydantic",
    "pydantic.warnings",
    "pydantic._internal._internal_dataclass",
    "pydantic.aliases",
    "pydantic.config",
    "pydantic._internal._config",
    "pydantic._internal._core_utils",
    "pydantic._internal._import_utils",
    "pydantic._internal._utils",
    "pydantic._internal._decorators",
    "pydantic._internal._forward_ref",
    "pydantic._internal._generics",
    "pydantic._internal._docs_extraction",
    "pydantic._internal._fields",
    "pydantic.plugin",
    "pydantic.plugin._schema_validator",
    "pydantic._internal._mock_val_ser",
    "fractions",
    "uuid",
    "sysconfig",
    "zoneinfo._tzpath",
    "zoneinfo._common",
    "zoneinfo",
    "pydantic.annotated_handlers",
    "pydantic.functional_validators",
    "pydantic._internal._core_metadata",
    "pydantic._internal._schema_generation_shared",
    "pydantic.json_schema",
    "pydantic._internal._discriminated_union",
    "pydantic._internal._known_annotated_metadata",
    "pydantic._internal._schema_gather",
    "pydantic._internal._generate_schema",
    "pydantic._internal._signature",
    "pydantic._internal._model_construction",
    "pydantic.main",
    "starlette.exceptions",
    "annotated_types",
    "pydantic._internal._validators",
    "pydantic.types",
    "pydantic.fields",
    "csv",
    "importlib._abc",
    "importlib.util",
    "zipfile",
    "importlib.metadata._functools",
    "importlib.metadata._text",
    "importlib.metadata._adapters",
    "importlib.metadata._meta",
    "importlib.metadata._collections",
    "importlib.metadata._itertools",
    "importlib.resources.abc",
    "importlib.resources._adapters",
    "importlib.resources._common",
    "importlib.resources._legacy",
    "importlib.resources",
    "importlib.abc",
    "importlib.metadata",
    "pydantic.plugin._loader",
    "fastapi.exceptions",
    "fastapi.types",
    "shlex",
    "anyio._core",
    "anyio._core._contextmanagers",
    "sniffio._version",
    "sniffio._impl",
    "sniffio",
    "anyio._core._eventloop",
    "anyio._core._exceptions",
    "anyio.abc._eventloop",
    "anyio.abc._resources",
    "anyio._core._typedattr",
    "anyio.abc._tasks",
    "anyio.abc._streams",
    "anyio.abc._sockets",
    "anyio.abc._subprocesses",
    "anyio.abc._testing",
    "anyio.lowlevel",
    "anyio._core._tasks",
    "anyio._core._testing",
    "anyio._core._synchronization",
    "anyio.from_thread",
    "anyio.abc",
    "anyio.to_thread",
    "anyio._core._fileio",
    "anyio._core._resources",
    "anyio._core._signals",
    "anyio.streams",
    "anyio.streams.stapled",
    "anyio.streams.tls",
    "anyio._core._sockets",
    "anyio.streams.memory",
    "anyio._core._streams",
    "anyio._core._subprocesses",
    "anyio._core._tempfile",
    "anyio",
    "starlette.concurrency",
    "starlette.types",
    "starlette.datastructures",
    "pydantic.type_adapter",
    "fastapi._compat",
    "fastapi.logger",
    "pydantic.networks",
    "fastapi.openapi.models",
    "fastapi.params",
    "fastapi.datastructures",
    "fastapi.dependencies",
    "fastapi.security.base",
    "http.cookies",
    "starlette._utils",
    "starlette.formparsers",
    "starlette.requests",
    "fastapi.security.api_key",
    "fastapi.security.utils",
    "fastapi.security.http",
    "fastapi.param_functions",
    "fastapi.security.oauth2",
    "fastapi.security.open_id_connect_url",
    "fastapi.security",
    "fastapi.dependencies.models",
    "starlette.background",
    "fastapi.background",
    "fastapi.concurrency",
    "fastapi.utils",
    "hashlib",
    "mimetypes",
    "hmac",
    "secrets",
    "starlette.responses",
    "starlette.websockets",
    "fastapi.dependencies.utils",
    "colorsys",
    "pydantic.color",
    "fastapi.encoders",
    "starlette._exception_handler",
    "starlette.convertors",
    "starlette.middleware",
    "starlette.routing",
    "fastapi.routing",
    "fastapi.websockets",
    "fastapi.exception_handlers",
    "fastapi.openapi.docs",
    "email.feedparser",
    "email.parser",
    "http.client",
    "fastapi.openapi.constants",
    "fastapi.responses",
    "fastapi.openapi.utils",
    "starlette.middleware.base",
    "html.entities",
    "html",
    "starlette.middleware.errors",
    "starlette.middleware.exceptions",
    "starlette.applications",
    "fastapi.applications",
    "fastapi.requests",
    "fastapi",
    "repl_server",
    "anyio._backends",
    "anyio._backends._asyncio",
    "numpy.version",
    "numpy._expired_attrs_2_0",
    "numpy._utils._convertions",
    "numpy._utils",
    "numpy._globals",
    "numpy._distributor_init",
    "numpy.exceptions",
    "numpy._core._exceptions",
    "numpy._core.printoptions",
    "numpy.dtypes",
    "numpy._core._multiarray_umath",
    "numpy._utils._inspect",
    "numpy._core.overrides",
    "numpy._core.multiarray",
    "numpy._core.umath",
    "numpy._core._dtype",
    "numpy._core._string_helpers",
    "numpy._core._type_aliases",
    "numpy._core.numerictypes",
    "numpy._core._ufunc_config",
    "numpy._core._methods",
    "numpy._core.fromnumeric",
    "numpy._core._machar",
    "numpy._core.shape_base",
    "numpy._core._asarray",
    "numpy._core.arrayprint",
    "numpy._core.numeric",
    "numpy._core.einsumfunc",
    "numpy._core.function_base",
    "numpy._core.getlimits",
    "numpy._core.memmap",
    "numpy._core.records",
    "numpy._core._add_newdocs",
    "numpy._core._add_newdocs_scalars",
    "numpy._core._dtype_ctypes",
    "ctypes._endian",
    "ctypes",
    "numpy._core._internal",
    "numpy._pytesttester",
    "numpy._core",
    "numpy.__config__",
    "numpy._typing._nbit_base",
    "numpy._typing._nested_sequence",
    "numpy._typing._shape",
    "numpy._typing._array_like",
    "numpy._typing._char_codes",
    "numpy._typing._dtype_like",
    "numpy._typing._nbit",
    "numpy._typing._scalars",
    "numpy._typing._ufunc",
    "numpy._typing",
    "numpy.lib._stride_tricks_impl",
    "numpy.lib._twodim_base_impl",
    "numpy.lib._array_utils_impl",
    "numpy.lib.array_utils",
    "numpy.linalg._umath_linalg",
    "numpy.linalg._linalg",
    "numpy.linalg.linalg",
    "numpy.linalg",
    "numpy.matrixlib.defmatrix",
    "numpy.matrixlib",
    "numpy.lib._histograms_impl",
    "numpy.lib._function_base_impl",
    "numpy.lib.stride_tricks",
    "numpy.lib._index_tricks_impl",
    "numpy.lib._arraypad_impl",
    "numpy.lib._arraysetops_impl",
    "numpy.lib._arrayterator_impl",
    "numpy.lib._nanfunctions_impl",
    "numpy.lib._utils_impl",
    "numpy.lib._format_impl",
    "numpy.lib.format",
    "numpy.lib._datasource",
    "numpy.lib._iotools",
    "numpy.lib._npyio_impl",
    "numpy.lib._ufunclike_impl",
    "numpy.lib._type_check_impl",
    "numpy.lib._polynomial_impl",
    "numpy.lib._shape_base_impl",
    "numpy.lib._version",
    "numpy.lib.introspect",
    "numpy.lib.mixins",
    "numpy.lib.npyio",
    "numpy.lib._scimath_impl",
    "numpy.lib.scimath",
    "numpy.lib",
    "numpy._array_api_info",
    "numpy",
    "pytz.exceptions",
    "pytz.lazy",
    "pytz.tzinfo",
    "pytz.tzfile",
    "pytz",
    "dateutil._version",
    "dateutil",
    "pandas.compat._constants",
    "pandas.compat.compressors",
    "pandas.util",
    "pandas.util.version",
    "pandas.compat.numpy",
    "gc",
    "pyarrow._generated_version",
    "cython_runtime",
    "pyarrow.util",
    "pyarrow.lib",
    "pyarrow.ipc",
    "pyarrow.types",
    "pyarrow",
    "pandas.compat.pyarrow",
    "pandas.compat",
    "numpy.random._common",
    "numpy.random.bit_generator",
    "numpy.random._bounded_integers",
    "numpy.random._pcg64",
    "numpy.random._mt19937",
    "numpy.random._generator",
    "numpy.random._philox",
    "numpy.random._sfc64",
    "numpy.random.mtrand",
    "numpy.random._pickle",
    "numpy.random",
    "pandas._typing",
    "pandas.util._exceptions",
    "pandas._config.config",
    "pandas._config.dates",
    "pandas._config.display",
    "pandas._config",
    "pandas.core",
    "pandas.core.config_init",
    "pandas._libs.pandas_parser",
    "pandas._libs.pandas_datetime",
    "pandas._libs.tslibs.ccalendar",
    "pandas._libs.tslibs.np_datetime",
    "pandas._libs.tslibs.dtypes",
    "pandas._libs.tslibs.base",
    "pandas._libs.tslibs.nattype",
    "pandas.compat._optional",
    "six",
    "six.moves",
    "dateutil.tz._common",
    "dateutil.tz._factories",
    "dateutil.tz.tz",
    "dateutil.tz",
    "pandas._libs.tslibs.timezones",
    "pandas._config.localization",
    "pandas._libs.tslibs.fields",
    "pandas._libs.tslibs.timedeltas",
    "pandas._libs.tslibs.tzconversion",
    "pandas._libs.tslibs.timestamps",
    "pandas._libs.properties",
    "pandas._libs.tslibs.offsets",
    "dateutil._common",
    "dateutil.relativedelta",
    "dateutil.parser._parser",
    "dateutil.parser.isoparser",
    "dateutil.parser",
    "pandas._libs.tslibs.strptime",
    "pandas._libs.tslibs.parsing",
    "pandas._libs.tslibs.conversion",
    "pandas._libs.tslibs.period",
    "pandas._libs.tslibs.vectorized",
    "pandas._libs.tslibs",
    "pandas._libs.ops_dispatch",
    "pandas._libs.missing",
    "pandas._libs.hashtable",
    "pandas._libs.algos",
    "pandas._libs.interval",
    "pandas._libs",
    "pandas.core.dtypes",
    "pandas._libs.lib",
    "pandas.errors",
    "pandas.core.dtypes.generic",
    "pandas.core.dtypes.base",
    "pandas.core.dtypes.inference",
    "pandas.core.dtypes.dtypes",
    "pandas.core.dtypes.common",
    "pandas.core.dtypes.missing",
    "pandas.util._decorators",
    "pandas.io",
    "pandas.io._util",
    "pandas.core.dtypes.cast",
    "pandas.core.dtypes.astype",
    "pandas.core.dtypes.concat",
    "pandas.core.array_algos",
    "numpy.ma.core",
    "numpy.ma.extras",
    "numpy.ma",
    "pandas.core.common",
    "pandas.core.construction",
    "pandas.core.array_algos.take",
    "pandas.core.indexers.utils",
    "pandas.core.indexers",
    "pandas.core.algorithms",
    "pyarrow._compute",
    "pyarrow._compute_docstrings",
    "pyarrow.vendored",
    "pkgutil",
    "pydoc",
    "pyarrow.vendored.docscrape",
    "pyarrow.compute",
    "pandas.core.arrays.arrow.accessors",
    "unicodedata",
    "pandas.util._validators",
    "pandas.core.missing",
    "pandas._libs.ops",
    "pandas.core.roperator",
    "pandas.core.computation",
    "pandas.core.computation.check",
    "pandas.core.computation.expressions",
    "pandas.core.ops.missing",
    "pandas.core.ops.dispatch",
    "pandas.core.ops.invalid",
    "pandas.core.ops.array_ops",
    "pandas.core.ops.common",
    "pandas.core.ops.docstrings",
    "pandas.core.ops.mask_ops",
    "pandas.core.ops",
    "pandas.core.arraylike",
    "pandas.core.arrays._arrow_string_mixins",
    "pandas.core.arrays._utils",
    "pandas.compat.numpy.function",
    "pandas.core.array_algos.quantile",
    "pandas.core.sorting",
    "pandas.core.arrays.base",
    "pandas.core.nanops",
    "pandas.core.array_algos.masked_accumulations",
    "pandas.core.array_algos.masked_reductions",
    "pandas.core.util",
    "pandas._libs.hashing",
    "pandas.core.util.hashing",
    "pandas.core.arrays.masked",
    "pandas._libs.arrays",
    "pandas.core.arrays.numeric",
    "pandas.core.arrays.floating",
    "pandas.core.arrays.integer",
    "pandas.core.array_algos.transforms",
    "pandas.core.arrays._mixins",
    "pandas.core.strings",
    "pandas.core.strings.base",
    "pandas.core.strings.object_array",
    "pandas.core.arrays.numpy_",
    "pandas.io.formats",
    "pandas.io.formats.console",
    "pandas.io.formats.printing",
    "pandas.core.arrays.string_",
    "pandas.tseries",
    "pandas.tseries.frequencies",
    "pandas.core.arrays.arrow.array",
    "pandas.core.arrays.arrow",
    "pandas.core.arrays.boolean",
    "pandas.core.accessor",
    "pandas.core.base",
    "pandas.core.arrays.categorical",
    "pandas._libs.tslib",
    "pandas.core.array_algos.datetimelike_accumulations",
    "pandas.core.arrays.datetimelike",
    "pandas.core.arrays._ranges",
    "pandas.tseries.offsets",
    "pandas.core.arrays.datetimes",
    "pandas.core.arrays.timedeltas",
    "pandas.core.arrays.interval",
    "pandas.core.arrays.period",
    "pandas._libs.sparse",
    "pandas.core.arrays.sparse.array",
    "pandas.core.arrays.sparse.accessor",
    "pandas.core.arrays.sparse",
    "pandas.core.arrays.string_arrow",
    "pandas.core.arrays",
    "pandas.core.flags",
    "pandas._libs.internals",
    "pandas.core._numba",
    "pandas.core._numba.executor",
    "pandas.core.apply",
    "pandas._libs.indexing",
    "pandas.core.indexes",
    "pandas._libs.index",
    "pandas._libs.writers",
    "pandas._libs.join",
    "pandas.core.array_algos.putmask",
    "pandas.core.indexes.frozen",
    "pandas.core.strings.accessor",
    "pandas.core.indexes.base",
    "pandas.core.indexes.extension",
    "pandas.core.indexes.category",
    "pandas.core.indexes.range",
    "pandas.core.tools",
    "pandas.core.tools.timedeltas",
    "pandas.core.indexes.datetimelike",
    "pandas.core.tools.times",
    "pandas.core.indexes.datetimes",
    "pandas.core.indexes.multi",
    "pandas.core.indexes.timedeltas",
    "pandas.core.indexes.interval",
    "pandas.core.indexes.period",
    "pandas.core.indexes.api",
    "pandas.core.indexing",
    "pandas.core.sample",
    "pandas.core.array_algos.replace",
    "pandas.core.internals.blocks",
    "pandas.core.internals.api",
    "pandas.core.internals.base",
    "pandas.core.internals.ops",
    "pandas.core.internals.managers",
    "pandas.core.internals.array_manager",
    "pandas.core.internals.concat",
    "pandas.core.internals",
    "pandas.core.internals.construction",
    "pandas.core.methods",
    "pandas.core.reshape",
    "pandas.core.reshape.concat",
    "gzip",
    "mmap",
    "pwd",
    "grp",
    "tarfile",
    "pandas.core.shared_docs",
    "pandas.io.common",
    "pandas.io.formats.format",
    "pandas.core.methods.describe",
    "pandas._libs.window",
    "pandas._libs.window.aggregations",
    "pandas._libs.window.indexers",
    "pandas.core.indexers.objects",
    "pandas.core.util.numba_",
    "pandas.core.window.common",
    "pandas.core.window.doc",
    "pandas.core.window.numba_",
    "pandas.core.window.online",
    "pandas.core.window.rolling",
    "pandas.core.window.ewm",
    "pandas.core.window.expanding",
    "pandas.core.window",
    "pandas.core.generic",
    "pandas.core.methods.selectn",
    "pandas.core.reshape.util",
    "pandas.core.tools.numeric",
    "pandas.core.reshape.melt",
    "pandas._libs.reshape",
    "pandas.core.indexes.accessors",
    "pandas.arrays",
    "pandas.core.tools.datetimes",
    "pandas.io.formats.info",
    "pandas.plotting._core",
    "pandas.plotting._misc",
    "pandas.plotting",
    "pandas.core.series",
    "pandas.core.frame",
    "pandas.core.groupby.base",
    "pandas._libs.groupby",
    "pandas.core.groupby.categorical",
    "pandas.core.groupby.grouper",
    "pandas.core.groupby.ops",
    "pandas.core.groupby.numba_",
    "pandas.core.groupby.indexing",
    "pandas.core.groupby.groupby",
    "pandas.core.groupby.generic",
    "pandas.core.groupby",
    "pandas.core.api",
    "pandas.tseries.api",
    "pandas.core.computation.common",
    "pandas.core.computation.align",
    "pprint",
    "pandas.core.computation.scope",
    "pandas.core.computation.ops",
    "pandas.core.computation.engines",
    "pandas.core.computation.parsing",
    "pandas.core.computation.expr",
    "pandas.core.computation.eval",
    "pandas.core.computation.api",
    "pandas.core.reshape.encoding",
    "pandas.core.reshape.merge",
    "pandas.core.reshape.pivot",
    "pandas.core.reshape.tile",
    "pandas.core.reshape.api",
    "pandas.api.extensions",
    "pandas.api.indexers",
    "pandas.core.interchange",
    "pandas.core.interchange.dataframe_protocol",
    "pandas.core.interchange.utils",
    "pandas.core.interchange.from_dataframe",
    "pandas.api.interchange",
    "pandas.core.dtypes.api",
    "pandas.api.types",
    "pandas.core.resample",
    "pandas._libs.json",
    "pandas.io.json._normalize",
    "pandas.io.json._table_schema",
    "pandas._libs.parsers",
    "pandas.io.parsers.base_parser",
    "pandas.io.parsers.arrow_parser_wrapper",
    "pandas.io.parsers.c_parser_wrapper",
    "pandas.io.parsers.python_parser",
    "pandas.io.parsers.readers",
    "pandas.io.parsers",
    "pandas.io.json._json",
    "pandas.io.json",
    "pandas.io.stata",
    "pandas.api.typing",
    "pandas.api",
    "pandas._testing.contexts",
    "pandas._testing._io",
    "pandas._testing._warnings",
    "cmath",
    "pandas._libs.testing",
    "pandas._testing.asserters",
    "pandas._testing.compat",
    "pandas._testing",
    "pandas.testing",
    "pandas.util._print_versions",
    "pandas.io.clipboards",
    "pandas.io.excel._util",
    "pandas.io.excel._calamine",
    "pandas.io.excel._odfreader",
    "pandas.io.excel._openpyxl",
    "pandas.io.excel._pyxlsb",
    "pandas.io.excel._xlrd",
    "pandas.io.excel._base",
    "pandas.io.excel._odswriter",
    "pandas.io.excel._xlsxwriter",
    "pandas.io.excel",
    "pandas.io.feather_format",
    "pandas.io.gbq",
    "pandas.io.html",
    "pandas.io.orc",
    "pandas.io.parquet",
    "pandas.compat.pickle_compat",
    "pandas.io.pickle",
    "pandas.core.computation.pytables",
    "pandas.io.pytables",
    "pandas.io.sas.sasreader",
    "pandas.io.sas",
    "pandas.io.spss",
    "pandas.io.sql",
    "pandas.io.xml",
    "pandas.io.api",
    "pandas.util._tester",
    "pandas._version_meson",
    "pandas",
    "packaging",
    "packaging._structures",
    "packaging.version",
    "matplotlib._api.deprecation",
    "matplotlib._api",
    "matplotlib._version",
    "matplotlib._c_internal_utils",
    "matplotlib.cbook",
    "matplotlib._docstring",
    "matplotlib.backends.registry",
    "matplotlib.backends",
    "PIL._version",
    "PIL",
    "PIL.ExifTags",
    "PIL._deprecate",
    "PIL.ImageMode",
    "PIL.TiffTags",
    "PIL._binary",
    "PIL._typing",
    "PIL._util",
    "PIL._imaging",
    "PIL.Image",
    "PIL.ImageChops",
    "PIL.ImageFile",
    "PIL.GimpGradientFile",
    "PIL.GimpPaletteFile",
    "PIL.ImageColor",
    "PIL.PaletteFile",
    "PIL.ImagePalette",
    "PIL.ImageSequence",
    "PIL.PngImagePlugin",
    "matplotlib._cm",
    "matplotlib._path",
    "matplotlib.bezier",
    "matplotlib.path",
    "matplotlib.transforms",
    "matplotlib.ticker",
    "matplotlib.scale",
    "matplotlib._image",
    "matplotlib._color_data",
    "matplotlib.colors",
    "pyparsing.util",
    "pyparsing.unicode",
    "pyparsing.exceptions",
    "pyparsing.results",
    "pyparsing.actions",
    "pyparsing.core",
    "pyparsing.helpers",
    "pyparsing.testing",
    "pyparsing.common",
    "pyparsing",
    "matplotlib._fontconfig_pattern",
    "matplotlib._enums",
    "cycler",
    "matplotlib.rcsetup",
    "matplotlib.ft2font",
    "kiwisolver.exceptions",
    "kiwisolver._cext",
    "kiwisolver",
    "matplotlib.artist",
    "matplotlib.colorizer",
    "matplotlib._cm_listed",
    "matplotlib._cm_multivar",
    "matplotlib._cm_bivar",
    "matplotlib.cm",
    "matplotlib",
    "pyarrow._parquet",
    "pyarrow._fs",
    "pyarrow._azurefs",
    "pyarrow._hdfs",
    "pyarrow._gcsfs",
    "pyarrow._s3fs",
    "pyarrow.fs",
    "pyarrow.parquet.core",
    "pyarrow.parquet",
    "pandas.core.arrays.arrow.extension_types",
    "pyarrow._acero",
    "pyarrow._csv",
    "pyarrow._json",
    "pyarrow._substrait",
    "pyarrow.substrait",
    "concurrent.futures.thread",
    "pyarrow.pandas_compat",
    "pyarrow.vendored.version",
    "pyarrow._dataset",
    "pyarrow._dataset_orc",
    "pyarrow._parquet_encryption",
    "pyarrow._dataset_parquet_encryption",
    "pyarrow._dataset_parquet",
    "pyarrow.dataset",
    "pandas.io.formats.string",
    "numpy.rec",
    "matplotlib.hatch",
    "matplotlib.markers",
    "matplotlib.lines",
    "matplotlib.collections",
    "matplotlib._pylab_helpers",
    "matplotlib.backend_tools",
    "xml",
    "xml.parsers",
    "pyexpat.errors",
    "pyexpat.model",
    "pyexpat",
    "xml.parsers.expat.model",
    "xml.parsers.expat.errors",
    "xml.parsers.expat",
    "plistlib",
    "matplotlib._mathtext_data",
    "matplotlib._afm",
    "encodings.utf_16_be",
    "matplotlib.font_manager",
    "matplotlib.patches",
    "matplotlib._text_helpers",
    "matplotlib.dviread",
    "matplotlib._mathtext",
    "matplotlib.mathtext",
    "matplotlib.texmanager",
    "matplotlib.textpath",
    "matplotlib.text",
    "matplotlib._tight_bbox",
    "matplotlib.widgets",
    "matplotlib.backend_managers",
    "matplotlib._layoutgrid",
    "matplotlib._constrained_layout",
    "matplotlib._tight_layout",
    "matplotlib.layout_engine",
    "matplotlib.backend_bases",
    "matplotlib.contour",
    "matplotlib.spines",
    "matplotlib.colorbar",
    "matplotlib.image",
    "matplotlib.style.core",
    "matplotlib.style",
    "matplotlib._blocking_input",
    "matplotlib.offsetbox",
    "matplotlib.units",
    "matplotlib.axis",
    "matplotlib.gridspec",
    "matplotlib.table",
    "matplotlib.axes._base",
    "matplotlib.category",
    "dateutil.rrule",
    "matplotlib.dates",
    "matplotlib.inset",
    "matplotlib.container",
    "matplotlib.legend_handler",
    "matplotlib.legend",
    "matplotlib.mlab",
    "matplotlib.quiver",
    "matplotlib.stackplot",
    "matplotlib.streamplot",
    "matplotlib.tri._triangulation",
    "matplotlib.tri._tricontour",
    "matplotlib.tri._trifinder",
    "matplotlib.tri._tritools",
    "matplotlib.tri._triinterpolate",
    "matplotlib.tri._tripcolor",
    "matplotlib.tri._triplot",
    "matplotlib.tri._trirefine",
    "matplotlib.tri",
    "matplotlib.axes._secondary_axes",
    "matplotlib.axes._axes",
    "matplotlib.axes",
    "matplotlib.projections.geo",
    "matplotlib.projections.polar",
    "mpl_toolkits",
    "mpl_toolkits.mplot3d.proj3d",
    "mpl_toolkits.mplot3d.art3d",
    "mpl_toolkits.mplot3d.axis3d",
    "mpl_toolkits.mplot3d.axes3d",
    "mpl_toolkits.mplot3d",
    "matplotlib.projections",
    "matplotlib.figure",
    "matplotlib.pyplot",
    "matplotlib.backends._backend_agg",
    "matplotlib.backends.backend_agg",
    "PIL.BmpImagePlugin",
    "PIL._imagingmath",
    "PIL.ImageMath",
    "PIL.ImageOps",
    "PIL.GifImagePlugin",
    "PIL.JpegPresets",
    "PIL.JpegImagePlugin",
    "PIL.PpmImagePlugin"
  ]
}